type Query {
    topicsByType(environmentId: String, topicType: TopicType): [Topic]!
}

type Topic {
    environmentId: ID!
    type: TopicType
    name: String
    deprecated: Boolean
    deprecationText: String
    subscriptionApprovalRequired: Boolean
    infoUrl: String
    criticality: Criticality
    messagesSize: MessagesSize
    messagesPerDay: MessagesPerDay
    compactionTimeMillis: Float
    retentionTimeMillis: Float
    eolDate: String
    producers: [Application]
    ownerApplication: Application
    subscriptions: [TopicSubscription]
}

type Application {
    id: ID!
    name: String
    infoUrl: String
    aliases: [String]
    businessCapabilities: [BusinessCapability]
}

type TopicSubscription {
    id: ID
    topicName: String
    state: SubscriptionState
    description: String
    clientApplication: Application
}

type BusinessCapability {
    id: ID
    name: String
}

enum Criticality {
    NORMAL, CRITICAL
}

enum MessagesSize {
    VERY_SMALL, SMALL, NORMAL, LARGE, VERY_LARGE
}

enum MessagesPerDay {
    FEW, NORMAL, MANY, VERY_MANY
}

enum TopicType {
    EVENTS, DATA, COMMANDS, INTERNAL
}

enum SubscriptionState {
    APPROVED, PENDING, REJECTED, CANCELED
}